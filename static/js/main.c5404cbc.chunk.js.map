{"version":3,"sources":["components/ScoringTable/index.js","components/Section/index.js","data.js","components/ConvertTable/index.js","index.js","components/App/index.js"],"names":["headers","ScoringTable","props","react_default","a","createElement","reactstrap_es","size","responsive","striped","bordered","map","item","idx","key","data","fan","hand","description","Section","Table","table","title","className","ScoringTable_ScoringTable","goingOut","specialHands","chowHand","pungHands","kongHand","suitHands","honorsHands","fanConversion","points","discard","draw","ConvertTable","render","Section_Section","document","getElementById"],"mappings":"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","file":"static/js/main.c5404cbc.chunk.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport { Table } from 'reactstrap'\n\ntype Props = {\n  data: Object[]\n}\n\nconst headers = ['Fan', 'Hand', 'Description']\n\nexport const ScoringTable = (props: Props) => (\n  <Table size=\"sm\" responsive striped bordered>\n    <thead>\n      <tr>\n        {headers.map((item, idx) => (\n          <th key={idx}>{item}</th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {props.data.map((item, idx) => (\n        <tr key={idx}>\n          <td>{item.fan}</td>\n          <td>{item.hand}</td>\n          <td>{item.description}</td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n)\n","// @flow\n\nimport React from 'react'\nimport { ScoringTable } from '../ScoringTable'\n\nimport './style.scss'\n\ntype Props = {\n  title: string,\n  data?: Object[],\n  table?: React.Component\n}\n\nexport const Section = (props: Props) => {\n  const { table: Table, title, data } = props\n\n  return (\n    <div className=\"Section\">\n      <h2>{title}</h2>\n      {Table ? <Table /> : <ScoringTable data={data} />}\n    </div>\n  )\n}\n","export const goingOut = [\n  { fan: 1, hand: 'Self-drawn Win', description: 'Winning on a tile drawn from the wall.' },\n  { fan: 1, hand: 'Last Tile Draw', description: 'Self-drawn win on the last tile of the wall.' },\n  {\n    fan: 1,\n    hand: 'Last Tile Discard',\n    description: 'Win by discard on the discard after the last tile of the wall is drawn.'\n  },\n  { fan: 1, hand: 'Robbing the Kong', description: 'Winning off the tile that somebody adds to a melded pung.' },\n  {\n    fan: 1,\n    hand: 'Out on Replacement',\n    description: 'Winning on the replacement tile drawn after declaring a kong. Counts as self-drawn.'\n  },\n  { fan: 10, hand: 'Blessing of Heaven', description: 'East wins with initial hand.' },\n  { fan: 10, hand: 'Blessing of Earth', description: 'Non-east player wins on East’s first discard.' }\n]\n\nexport const specialHands = [\n  { fan: 1, hand: 'No Flowers and no Seasons', description: 'Hand contains no flowers and seasons.' },\n  { fan: 1, hand: 'Seat Flower', description: 'Hand contains player’s flower.' },\n  { fan: 1, hand: 'Seat Season', description: 'Hand contains player’s Season.' },\n  { fan: 2, hand: 'All Flowers', description: 'Hand contains all flower tiles. Implies Seat Flower.' },\n  { fan: 2, hand: 'All Seasons', description: 'Hand contains all seasons tiles. Implies Seat Season.' },\n  { fan: 4, hand: 'Seven Pairs', description: 'Hand is composed of seven pairs of tiles.' },\n  {\n    fan: 10,\n    hand: 'Thirteen Orphans',\n    description: 'Hand made of single tiles of 12 honors and terminals, plus a pair of the 13th.'\n  }\n]\n\nexport const chowHand = [\n  { fan: 1, hand: 'All Chows', description: 'Hand consists only of chows and a pair of suit tiles.' }\n]\n\nexport const pungHands = [\n  { fan: 3, hand: 'All Pungs', description: 'Hand consists all pungs.' },\n  { fan: 10, hand: 'Four Concealed Pungs', description: '\tHand has four concealed pungs and a pair and self-drawn win.' }\n]\n\nexport const kongHand = [{ fan: 10, hand: 'All Kongs', description: 'Hand has four kongs and a pair.' }]\n\nexport const suitHands = [\n  { fan: 3, hand: 'Half Flush', description: 'Hand consists only of honors and suit tiles of one suit.' },\n  { fan: 6, hand: 'Full Flush', description: 'Hand consists only of suit tiles of one suit.' },\n  {\n    fan: 10,\n    hand: 'Nine Gates',\n    description: 'Concealed hand of 1112345678999 in one suit and winning on any tile of the same suit.'\n  },\n  {\n    fan: 10,\n    hand: 'Jade Dragon',\n    description: 'Hand is composed of pungs (or kongs) of bamboo tiles and a pung of green dragons.'\n  },\n  {\n    fan: 10,\n    hand: 'Ruby Dragon',\n    description: 'Hand is composed of pungs (or kongs) of character tiles and pung of red dragons.'\n  },\n  {\n    fan: 10,\n    hand: 'Pearl Dragon',\n    description: 'Hand is composed of pungs (or kongs) of dot tiles and a pung of white dragons.'\n  }\n]\n\nexport const honorsHands = [\n  { fan: 1, hand: 'Dragon Pung', description: 'Hand includes a pung (or kong) of dragons.' },\n  {\n    fan: 1,\n    hand: 'Seat/Prevalent Wind',\n    description: 'Hand includes a pung (or kong) of the player’s seat or round wind.'\n  },\n  { fan: 4, hand: 'Little Three Dragons', description: 'Hand has two dragon pungs and a pair of the third dragon.' },\n  { fan: 10, hand: 'Big Three Dragons', description: 'Hand has three dragon pungs.' },\n  { fan: 10, hand: 'Little Four Winds', description: 'Hand has three pungs and a pair of winds.' },\n  { fan: 10, hand: 'Big Four Winds', description: 'Hand has four pungs of winds.' },\n  { fan: 10, hand: 'All Honors', description: 'Hand consists only of honor tiles.' },\n  { fan: 10, hand: 'All Terminals', description: 'Hand consists only of terminals.' }\n]\n\nexport const fanConversion = [\n  { fan: '0', points: 1, discard: 'N/A', draw: '2 + 2 + 4 = 8' },\n  { fan: '1', points: 2, discard: '2 + 2 + 2 = 6', draw: '4 + 4 + 8 = 16' },\n  { fan: '2', points: 4, discard: '4 + 4 + 4 = 12', draw: '8 + 8 + 16 = 32' },\n  { fan: '3', points: 8, discard: '8 + 8 + 8 = 24', draw: '16 + 16 + 32 = 64' },\n  { fan: '4-6', points: 16, discard: '16 + 16 + 16 = 48', draw: '32 + 32 + 64 = 128' },\n  { fan: '7-9', points: 32, discard: '32 + 32 + 32 = 96', draw: '64 + 64 + 128 = 256' },\n  { fan: '10', points: 64, discard: '64 + 64 + 128 = 256', draw: '128+128+128=384' }\n]\n","// @flow\n\nimport React from 'react'\nimport { Table } from 'reactstrap'\nimport { fanConversion } from '../../data'\n\nconst headers = ['Fan', 'Points', 'On Discard', 'On Draw']\n\nexport const ConvertTable = (props: Props) => (\n  <Table size=\"sm\" responsive striped bordered>\n    <thead>\n      <tr>\n        {headers.map((item, idx) => (\n          <th key={idx}>{item}</th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {fanConversion.map((item, idx) => (\n        <tr key={idx}>\n          <td>{item.fan}</td>\n          <td>{item.points}</td>\n          <td>{item.discard}</td>\n          <td>{item.draw}</td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { App } from './components/App'\n\nimport './assets/style.scss'\n\nrender(<App />, document.getElementById('root'))\n","import React from 'react'\nimport { Section } from '../Section'\nimport { ConvertTable } from '../ConvertTable'\nimport { goingOut, specialHands, chowHand, pungHands, kongHand, suitHands, honorsHands } from '../../data'\n\nimport './style.scss'\n\nexport const App = () => (\n  <div className=\"App\">\n    <h1>Mahjong-HK-Old-Scoring</h1>\n    <p>\n      Notes for scoring in Hong Kong Old Style of Mahjong. Typically, all hands must have four sets (chows, pungs, or\n      kongs) and a pair.\n    </p>\n\n    <Section title=\"Going Out\" data={goingOut} />\n    <Section title=\"Special Hands\" data={specialHands} />\n    <Section title=\"Chow Hand\" data={chowHand} />\n    <Section title=\"Pung Hands\" data={pungHands} />\n    <Section title=\"Kong Hand\" data={kongHand} />\n    <Section title=\"Suit Hands\" data={suitHands} />\n    <Section title=\"Terminal/Honors Hands\" data={honorsHands} />\n    <Section title=\"Fan to Point Conversion\" table={ConvertTable} />\n  </div>\n)\n"],"sourceRoot":""}